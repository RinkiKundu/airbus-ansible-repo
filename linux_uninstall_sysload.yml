---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED:  This target host {{HOSTS}} does not  exist in tower Ansible Inventory 2L22"
        failed_when: True

- name: Playbook check if host is Linux
  gather_facts: false
  hosts: "{{ HOSTS }}"
  vars:
    HOSTS:

  tasks:
    - block:
      - name: "Fail if Variable ansible_connection is winrm"
        assert:
          that:
            - ansible_connection != "winrm"
          msg: "Playbook is for linux not windows"

      rescue:
      - name: Invalid OS for this playbook
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED: {{ HOSTS }} is a windows cannot run this playbook"
        failed_when: True

# uninstall sysload client
- name: Uninstall sysload client
  hosts: "{{ HOSTS }}"
  gather_facts: false
  become: true
  vars:
    - HOSTS:
    - ADM_HOST: de0-monas-p01.eu.airbus.corp
    - SCRIPT: /local/opt/Automation/Sysload/bin/sldRemoveAgent.sh

  tasks:
    - block:
      - name: Check if sysload Agent is installed
        command: yum list installed aicb-sysload
        args:
          warn: no
        register: sysloadagt
        changed_when: false
        failed_when: false

      - name: Stop Sysload Agent
        service:
          name: sysload
          state: stopped
          enabled: no
        when: sysloadagt.rc == 0

      - name: Uninstall Sysload Agent
        yum:
          name: aicb-sysload
          state: absent

      - name: Remove sysload client on sysload console
        shell: "{{ SCRIPT }} {{ansible_host}}" 
        register: result
        failed_when: false
        delegate_to: "{{ ADM_HOST }}"
        vars:
          ansible_ssh_user: '{{ lookup("env", "ANSIBLE_NET_USERNAME") }}'
          ansible_ssh_pass: '{{ lookup("env", "ANSIBLE_NET_PASSWORD") }}'
          ansible_become: no
        when: sysloadagt.rc == 0

      - name: "assert RC=0 or 4 for {{ SCRIPT }}"
        assert:
          that: result.rc == 0 or result.rc == 4
          msg: "{{result.stdout}}"
        when: sysloadagt.rc == 0

      - name: Log output when successful
        debug:
          msg:
            - "SYNTBOT_OUTPUT: SUCCESSFUL uninstall of sysload agent on {{ ansible_host }}"

      rescue:
      - name: Log output when failed
        debug:
          msg:
            - "SYNTBOT_OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed on {{ ansible_host }}: {{ ansible_failed_result.msg }}"
        failed_when: True
