---
# Compressing D: volume large text and log files if , else show the biggest directories
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg:
            - "OUTPUT: FAILED:  This target host {{ HOSTS }} does not exist in Tower Ansible Inventory"
            - "DISPLAY: "
        failed_when: True

- name: Playbook freespace disk D
  gather_facts: true
  hosts: "{{ HOSTS }}"
  vars:
   HOSTS:

  tasks:
   - block:
     - name: Assert that PERCENT is provided
       assert:
         that:
           - PERCENT | mandatory
           - PERCENT is defined
           - PERCENT >= 0
           - PERCENT < 100
         msg: "OUTPUT: FAILED on {{ HOSTS }} Incorrect input PERCENT."

     - name: "Copy ./files/compress-d.ps1 to {{ HOSTS }}"
       win_copy:
         src: ./files/compress-d.ps1
         dest: C:/Temp/compress-d.ps1
       register: result_copy

     - name: "Copy ./files/du-d.ps1 to {{ HOSTS }}"
       win_copy:
         src: ./files/du-d.ps1
         dest: C:/Temp/du-d.ps1
       register: result_copy

     - name: run script
       win_shell: C:\temp\compress-d.ps1
       register: out1
       changed_when: false
       ignore_errors: yes         
     
     - name: run script
       win_shell: C:\temp\du-d.ps1
       register: out3
       changed_when: false
       
     - name: D Drive Status
       win_shell: |
         $paramdisplay={{ PERCENT }}
         $param=([int]($paramdisplay*100+1))/100
         
         $freespace=Get-WmiObject Win32_LogicalDisk -Filter "DeviceID='D:'" | Foreach-Object {$_.FreeSpace}
         $size=Get-WmiObject Win32_LogicalDisk -Filter "DeviceID='D:'" | Foreach-Object {$_.Size}
         $percent=$freespace/$size*100
         
         $percent=([int]($percent*100))/100
         
         if ($percent -gt $param) {
           write-output "Freespace left after cleaning: $percent%: OK (> $paramdisplay%)"
         }
         else
         {
           write-output "Freespace left after cleaning: $percent%: Insufficient (< $paramdisplay%)"
         }
       register: out2
       changed_when: false
       failed_when: out2.stdout | trim is search('Insufficient')
      
     - name: Purging the script
       win_file:
         path: C:\temp\compress-d.ps1
         state: absent
       changed_when: false
       ignore_errors: yes

     - name: Purging the script
       win_file:
         path: C:\temp\du-d.ps1
         state: absent
       changed_when: false
       ignore_errors: yes
       
     - name: Log output for SYNTBOT when successful
       debug:
         msg:
           - "OUTPUT: SUCCESSFUL on {{ HOSTS }}"
           - "DISPLAY: {{ out2.stdout_lines | to_yaml }}"
 
     rescue:
     - name: Log output for SYNTBOT when failed
       debug:
         msg:
          - "OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed on {{ HOSTS }}"
          - "DISPLAY: {{ out2.stdout_lines | to_yaml }} {{ out3.stdout_lines | to_nice_yaml }}"
       failed_when: True
