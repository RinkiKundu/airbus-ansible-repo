---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED :  this host {{ HOSTS }} does not exist in the inventory 2L22"
        failed_when: True

- name: Playbook restart a process dgmgrl (Observer)
  gather_facts: false
  hosts: "{{ HOSTS }}"
  become: true
  vars:
    HOSTS: 
    ORA_SID:

  tasks:
    - block:

      - name: "Check host {{ HOSTS }} is reachable"
        ping:
        register: result
        failed_when: result is not success


      - name: "Copy script and START_OBSERVER / STOP_OBSERVER on {{ HOSTS }}"
        copy:
          src: "{{ item.src }}"
          dest: "{{ item.dest }}"
          mode: 0755
          owner: oracle
          group: pgr-oracle
          backup: yes
          force: yes
        with_items:
          - { src: '../files/STOP_OBSERVER',dest: '/local/home/oracle/OBSERVER/STOP_OBSERVER'}

      - name: "Copy script /tmp/ObserverCMD.sh to {{ HOSTS }}"
        copy:
          src: ./files/ObserverCMD.sh
          dest: /tmp/ObserverCMD.sh
          mode: 0755

      - name: "RUN /tmp/ObserverCMD.sh STOP_OBSERVER  {{ ORA_SID }} on {{ HOSTS }}"
        shell: /tmp/ObserverCMD.sh STOP_OBSERVER  "{{ ORA_SID }}"
        #ignore_errors: true

      - name: "RUN /tmp/ObserverCMD.sh START_OBSERVER  {{ ORA_SID }} on {{ HOSTS }}"
        shell: /tmp/ObserverCMD.sh START_OBSERVER  "{{ ORA_SID }}"


      - name: "Check process OBSERVER  dgmgrl on {{ HOSTS }}"
        shell: ps -ef |grep -v grep |grep -i dgmgrl |grep -i "{{ ORA_SID }}"

      - name: Log output for SYNTBOT when successfull
        debug:
          msg:
           - "SYNTBOT_OUTPUT: SUCCESSFUL - Process OBSERVER  dgmgrl restarted on {{ HOSTS }}"

      rescue:
      - name: Log output for SYNTBOT when failed
        debug:
          msg:
            - "SYNTBOT_OUTPUT:  FAILED - Task {{ ansible_failed_task.name}} failed on {{ HOSTS }} : {{ ansible_failed_result.msg }}"
        failed_when: True

      always:
      - name: Delete files on "{{ HOSTS }}"
        file:
          path: "{{ item }}"
          state: absent
        with_items:
          - /tmp/ObserverCMD.sh
